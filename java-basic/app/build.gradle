/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.4/userguide/building_java_projects.html in the Gradle documentation.
 */

// Gradle 빌드 도구가 사용할 플러그인 설정
plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    // 자바 어플리케이션을 생성하는 플러그인.
    // 이 플러그인을 추가하면 'java'플러그인이 자동으로 추가된다. (-> 따로 추가할 필요 X)
    id 'application'    
}

// 이 프로젝트에서 사용할 외부 라이브러리를 제공하는 서버를 설정한다.
// 외부 라이브러리: 다른 개발자가 만든 코드를 담고 있는 파일
repositories {
    // 외부 라이브러리를 다운로드받을 서버 정보

    // Use Maven Central for resolving dependencies.
    mavenCentral()  // Maven 사이트에서 제공하는 라이브러리 서버
}

// 이 프로젝트에서 사용할 외부 라이브러리 지정. 여기에 다운로드할 외부 라이브러리를 지정한다.
// -> 빌드할 때 자동으로 라이브러리 다운로드함
dependencies {
    // 외부 라이브러리 정보

    // Use JUnit Jupiter for testing.
    // 단위테스트할 때 사용할 라이브러리
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'

    // 단위테스트 관련 라이브러리
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    // 일반적으로 애플리케이션 개발할 때 많이 사용하는 라이브러리
    // 구글 개발자들이 만든 라이브러리
    implementation 'com.google.guava:guava:32.1.1-jre'
}

// Apply a specific Java toolchain to ease working on different environments.
// 소스파일이 어떤 자바 버전으로 되어 있는지 Gradle에게 알려줌
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

// application 플러그인과 관련된 설정
application {
    // Define the main class for the application.
    mainClass = 'Hello' // run 명령 수행할 때 실행시킬 자바 클래스 이름 지정
}

// 단위 테스트를 실행할 때 사용할 설정
tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()  // 단위 테스트를 수행할 떄 JUnit 도구를 사용하도록 지정한다.
}

// 자바 소스를 컴파일 할 때 적용할 옵션
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}